openapi: 3.0.3
info:
  title: Book Service API
  description: API for managing books in the library.
  version: "1.0.0"
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /books/:
    get:
      summary: Get all books
      operationId: getAllBooks
      tags:
        - Books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '503':
          description: Service unavailable
  /books/add:
    post:
      summary: Create a new book
      operationId: createBook
      tags:
        - Books
      requestBody:
        description: Data for the new book
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreateIn'
      responses:
        '200':
          description: ID of the newly created book
          content:
            application/json:
              schema:
                type: integer
                example: 1
        '404':
          description: Not found
  /books/{id}:
    get:
      summary: Get a book by ID
      operationId: getBook
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the book
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    patch:
      summary: Update a book by ID
      operationId: updateBook
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the book
      requestBody:
        description: Data to update the book
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCreateIn'
      responses:
        '200':
          description: ID of the updated book
          content:
            application/json:
              schema:
                type: integer
                example: 1
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      operationId: deleteBook
      tags:
        - Books
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the book
      responses:
        '200':
          description: Book deleted successfully
        '404':
          description: Book not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        author:
          type: string
          example: "George Orwell"
        title:
          type: string
          example: "1984"
    BookCreateIn:
      type: object
      properties:
        author:
          type: string
          example: "George Orwell"
        title:
          type: string
          example: "1984"